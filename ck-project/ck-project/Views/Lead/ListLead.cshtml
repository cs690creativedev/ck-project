@using PagedList;
@using PagedList.Mvc;

@model IPagedList<ck_project.lead>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @if (ViewBag.m != null)
    {
        <script type="text/javascript">
 $(document).ready(function () {
     toastr.success('@ViewBag.m');
     @ViewBag.m = null
 });

        </script>
    }
}

@{
    if (HttpContext.Current.User.IsInRole("Administrator"))
    {
        @Html.Partial("_AdminMenu")
    }
    else

    {
        @Html.Partial("_MainMenu")
    }
}

<div class="container">
    <h2>Leads List</h2>


@using (Html.BeginForm("ListLead", "Lead", FormMethod.Get))
{
    @Html.TextBox("Search", ViewData.TemplateInfo.FormattedModelValue,
        new { placeholder = "Type project name here" });
    <text>&nbsp;</text>
    @Html.DropDownList("type", (IEnumerable<SelectListItem>)ViewBag.lead_type, new { style = " height: 25px;" });

    <input style="height:25px;" type="date" name="start"/>
        <input style="height:25px;" type="date" name="end" />
        <input type="submit" value="Search" />        @Html.ActionLink("  Or Create a New Lead", "ListCustomers", "Customers")

}

    <table class="table table-striped">
    <thead class="mdb-color darken-3">
        <tr>
            <th>
                Project Name
            </th>
            <th>
                Customer Name
            </th>
            <th>
                SalesPerson
            </th>
            <th>
                Project Type
            </th>
            <th>
                Project Status
            </th>
            <th>
                Create Date
            </th>
            <th>
                Last Update Date
            </th>

            <th>
                Branch
            </th>

            <th></th>
        </tr>
    </thead>
    @if (Model != null)
    {
        @*@if (Model.Count() == 0)
            {
                <tr>
                    <td colspan="6"> Sorry, There are no leads with the entered project name
                    <td>
                </tr>
            }
            else
            {*@
    foreach (var item in Model)
    {


        <tr>
            <td>
                @Html.DisplayFor(model => item.project_name)
            </td>
            <td>
                @Html.DisplayFor(model => item.customer.customer_firstname)

                @Html.DisplayFor(model => item.customer.customer_lastname)
            </td>
            <td>
                @Html.DisplayFor(model => item.employee.emp_firstname)
                @Html.DisplayFor(model => item.employee.emp_lastname)
            </td>
            <td>
                @Html.DisplayFor(model => item.project_type.project_type_name)
            </td>
            <td>
                @Html.DisplayFor(model => item.project_status.project_status_name)
            </td>
            <td>
                @*@Html.DisplayFor(model => Model.First().lead_date)*@
                @item.lead_date.ToString("dd MMM yyyy")
            </td>
            <td>
                @{
                    if (item.Last_update_date == item.lead_date)
                    {
                        @Html.DisplayName(" - ")
                    }
                    else
                    {
                        @Html.DisplayName(item.Last_update_date.ToString("dd MMM yyyy"))
                    }                    }
            </td>

            <td>
                @Html.DisplayFor(model => item.branch.branch_name)
            </td>


            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.lead_number }) |
                @Html.ActionLink("Details", "ProjSummary", "Home", new { id = item.lead_number }, null) |
                @Html.ActionLink("Delete", "Delete", new { id = item.lead_number },
                             new { onclick = "return confirm('Are you sure you wish to delete the lead?');" })

            </td>
        </tr>
                        }
                    }
</table>
                            @Html.PagedListPager(Model, page => Url.Action("ListLead",
    new { page, search = Request.QueryString["Search"], Type = Request.QueryString["type"], Start = Request.QueryString["start"], end = Request.QueryString["end"] }), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true })
                          
     
    



                          
</div>






