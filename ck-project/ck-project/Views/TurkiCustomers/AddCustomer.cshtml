@model  Tuple<ck_project.customer, ck_project.address>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>customer</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item1.customer_firstname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.Item1.customer_firstname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.Item1.customer_firstname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item1.customer_middlename, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.Item1.customer_middlename, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.Item1.customer_middlename, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item1.customer_lastname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.Item1.customer_lastname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.Item1.customer_lastname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item1.phone_number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.Item1.phone_number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.Item1.phone_number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item1.second_phone_number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.Item1.second_phone_number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.Item1.second_phone_number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item1.email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.Item1.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.Item1.email, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(tuple => tuple.Item1..address_number, "address_number", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("address_number", (List<SelectListItem>)ViewBag.add_dropdown, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(tuple => tuple.Item1..address_number, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>*@
    </div>




    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>address</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item2.address_type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.Item2.address_type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.Item2.address_type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item2.address1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.Item2.address1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.Item2.address1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item2.city, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.Item2.city, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.Item2.city, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item2.state, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.Item2.state, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.Item2.state, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item2.county, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.Item2.county, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.Item2.county, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(tuple => tuple.Item2.zipcode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(tuple => tuple.Item2.zipcode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(tuple => tuple.Item2.zipcode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
